import { IFriendsDatabaseComponent } from '../../../src/types'

export const mockFriendsDB: jest.Mocked<IFriendsDatabaseComponent> = {
  createFriendship: jest.fn(),
  updateFriendshipStatus: jest.fn(),
  getFriends: jest.fn(),
  getFriendsCount: jest.fn(),
  getOnlineFriends: jest.fn(),
  getMutualFriends: jest.fn(),
  getMutualFriendsCount: jest.fn(),
  getFriendship: jest.fn(),
  getLastFriendshipActionByUsers: jest.fn(),
  recordFriendshipAction: jest.fn(),
  getReceivedFriendshipRequests: jest.fn(),
  getReceivedFriendshipRequestsCount: jest.fn(),
  getSentFriendshipRequests: jest.fn(),
  getBlockedUsers: jest.fn(),
  getBlockedByUsers: jest.fn(),
  blockUser: jest.fn(),
  unblockUser: jest.fn(),
  blockUsers: jest.fn(),
  unblockUsers: jest.fn(),
  getSentFriendshipRequestsCount: jest.fn(),
  isFriendshipBlocked: jest.fn(),
  getSocialSettings: jest.fn(),
  upsertSocialSettings: jest.fn(),
  executeTx: jest.fn(),
  deleteSocialSettings: jest.fn(),
  getFriendsFromList: jest.fn()
}

export function createFriendsDBMockedComponent({
  createFriendship = jest.fn(),
  updateFriendshipStatus = jest.fn(),
  getFriends = jest.fn(),
  getFriendsCount = jest.fn(),
  getOnlineFriends = jest.fn(),
  getMutualFriends = jest.fn(),
  getMutualFriendsCount = jest.fn(),
  getFriendship = jest.fn(),
  getLastFriendshipActionByUsers = jest.fn(),
  recordFriendshipAction = jest.fn(),
  getReceivedFriendshipRequests = jest.fn(),
  getReceivedFriendshipRequestsCount = jest.fn(),
  getSentFriendshipRequests = jest.fn(),
  getBlockedUsers = jest.fn(),
  getBlockedByUsers = jest.fn(),
  blockUser = jest.fn(),
  unblockUser = jest.fn(),
  blockUsers = jest.fn(),
  unblockUsers = jest.fn(),
  getSentFriendshipRequestsCount = jest.fn(),
  isFriendshipBlocked = jest.fn(),
  getSocialSettings = jest.fn(),
  upsertSocialSettings = jest.fn(),
  executeTx = jest.fn(),
  deleteSocialSettings = jest.fn(),
  getFriendsFromList = jest.fn()
}: Partial<jest.Mocked<IFriendsDatabaseComponent>>): jest.Mocked<IFriendsDatabaseComponent> {
  return {
    createFriendship,
    updateFriendshipStatus,
    getFriends,
    getFriendsCount,
    getOnlineFriends,
    getMutualFriends,
    getMutualFriendsCount,
    getFriendship,
    getLastFriendshipActionByUsers,
    recordFriendshipAction,
    getReceivedFriendshipRequests,
    getReceivedFriendshipRequestsCount,
    getSentFriendshipRequests,
    getBlockedUsers,
    getBlockedByUsers,
    blockUser,
    unblockUser,
    blockUsers,
    unblockUsers,
    getSentFriendshipRequestsCount,
    isFriendshipBlocked,
    getSocialSettings,
    upsertSocialSettings,
    executeTx,
    deleteSocialSettings,
    getFriendsFromList
  }
}
