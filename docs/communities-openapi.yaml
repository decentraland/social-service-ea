openapi: 3.0.0
info:
  title: Social Service API
  version: 1.0.0
  description: API documentation for the Social Service.
# servers:
#   - url: https://social-service-ea.decentraland.org

paths:
  /v1/communities:
    get:
      summary: List communities
      description: |
        Lists all communities.
        This endpoint has optional Signed Fetch authentication.
        When signed, it includes properties related to the authenticated user in its response.
      responses:
        '200':
          description: Communities found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/GetCommunities200OkResponse'
      tags:
        - Communities
    post:
      summary: Create a new community
      description: |
        Creates a new community with the provided details.
        This endpoint requires Signed Fetch authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                # - thumbnail TODO
              properties:
                name:
                  type: string
                description:
                  type: string
                # thumbnail:
                  # type: string
      responses:
        '201':
          description: Community created successfully
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/CreateCommunity201OkResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/communities/{id}:
    get:
      summary: Get a community by ID
      description: |
        Retrieves a specific community by its unique ID.
        This endpoint requires Signed Fetch authentication.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      responses:
        '200':
          description: Community found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/GetCommunityById200OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    delete:
      summary: Delete a community
      description: |
        Deletes a community.
        This endpoint requires Signed Fetch authentication.
      parameters:
        - name: id
          in: path
          required: true
          schema:
      responses:
        '204':
          description: Community deleted successfully
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/members:
    get:
      summary: List community members
      description: |
        Lists all members of a specific community.
        This endpoint requires Signed Fetch authentication.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Page number for pagination.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of members per page.
      responses:
        '200':
          description: Members found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/GetCommunityMembers200OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    post:
      summary: Add a member to a community
      description: |
        Adds a member to a community.
        This endpoint requires Signed Fetch authentication.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - memberAddress
              properties:
                memberAddress:
                  type: string
                  description: ETH address of the member to add.
      responses:
        '201':
          description: Member added successfully
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/AddMemberToCommunity201OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/communities/{id}/members/{memberAddress}:
    delete:
      summary: Remove a member from a community
      description: |
        Removes a member from a community.
        This endpoint requires Signed Fetch authentication.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: memberAddress
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member to remove.
      responses:
        '204':
          description: Member removed successfully
        '404':
          description: Community or member not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/members/{address}/communities:
    get:
      summary: List communities for a member
      description: |
        Lists all communities a member belongs to.
        This endpoint requires Signed Fetch authentication.
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member.
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Page number for pagination.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of communities per page.
      responses:
        '200':
          description: Communities found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/GetMemberCommunities200OkResponse'
        '404':
          description: Member not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/bans:
    get:
      summary: List banned members of a community
      description: |
        Lists all banned members of a specific community.
        This endpoint requires Signed Fetch authentication.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Page number for pagination.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of banned members per page.
      responses:
        '200':
          description: Banned members found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/GetBannedMembers200OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/communities/{id}/members/{memberAddress}/bans:
    post:
      summary: Ban a member from a community
      description: |
        Bans a member from a community.
        This endpoint requires Signed Fetch authentication.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: memberAddress
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member to ban.
      responses:
        '204':
          description: Member banned successfully
        '404':
          description: Community or member not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    delete:
      summary: Unban a member from a community
      description: |
        Unbans a member from a community.
        This endpoint requires Signed Fetch authentication.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: memberAddress
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member to unban.
      responses:
        '204':
          description: Member unbanned successfully
        '404':
          description: Community or member not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
