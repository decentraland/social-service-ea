openapi: 3.0.0
info:
  title: Social Service API
  version: 1.0.0
  description: API documentation for the Social Service.

servers:
  # - url: https://social-service-ea.decentraland.org
  # description: Production server
  - url: https://social-service-ea.decentraland.zone
    description: Development server

components:
  securitySchemes:
    SignedFetch:
      type: apiKey
      in: header
      name: Authorization
      description: |
        Signed Fetch authentication.
        See ADR-44 for more details about the authentication mechanism.

security:
  - SignedFetch: []

paths:
  /v1/communities:
    get:
      summary: List communities
      description: |
        Lists all communities.
        This endpoint has optional Signed Fetch authentication.
        When signed, it includes properties related to the authenticated user in its response.
      security:
        - SignedFetch: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of communities per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of communities to skip.
        - name: search
          in: query
          required: false
          schema:
            type: string
          description: Search term to filter communities by name or description.
        - name: onlyMemberOf
          in: query
          required: false
          schema:
            type: boolean
          description: Filter communities where the authenticated user is a member.
      responses:
        '200':
          description: Communities found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/GetCommunities200OkResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    post:
      summary: Create a new community
      description: |
        Creates a new community with the provided details.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: string
                description:
                  type: string
                placeIds:
                  type: string
                  description: 'JSON array of place IDs to add to the community'
                thumbnail:
                  type: string
                  format: binary
                  description: 'Community thumbnail image'
      responses:
        '201':
          description: Community created successfully
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/CreateCommunity201OkResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/communities/{id}:
    get:
      summary: Get a community by ID
      description: |
        Retrieves a specific community by its unique ID.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      responses:
        '200':
          description: Community found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/GetCommunityById200OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    delete:
      summary: Delete a community
      description: |
        Deletes a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      responses:
        '204':
          description: Community deleted successfully
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/members:
    get:
      summary: List community members
      description: |
        Lists all members of a specific community.
        This endpoint has optional Signed Fetch authentication.
        When not signed, it only returns members of public communities.
        When signed, it returns all members if the user has access to the community.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of members per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of members to skip.
        - name: onlyOnline
          in: query
          required: false
          schema:
            type: boolean
          description: Filter to show only online members.
      responses:
        '200':
          description: Members found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/GetCommunityMembers200OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    post:
      summary: Add a member to a community
      description: |
        Adds a member to a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      responses:
        '204':
          description: Member added successfully
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/communities/{id}/members/{memberAddress}:
    delete:
      summary: Remove a member from a community
      description: |
        Removes a member from a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: memberAddress
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member to remove.
      responses:
        '204':
          description: Member removed successfully
        '404':
          description: Community or member not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    patch:
      summary: Update member role
      description: |
        Updates the role of a member in a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: memberAddress
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
              properties:
                role:
                  type: string
                  enum: [Owner, Moderator, Member]
                  description: 'New role for the member'
      responses:
        '204':
          description: Member role updated successfully
        '404':
          description: Community or member not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/members/{address}/communities:
    get:
      summary: List communities for a member
      description: |
        Lists all communities a member belongs to.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of communities per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of communities to skip.
      responses:
        '200':
          description: Communities found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/GetMemberCommunities200OkResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/bans:
    get:
      summary: List banned members of a community
      description: |
        Lists all banned members of a specific community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of banned members per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of banned members to skip.
      responses:
        '200':
          description: Banned members found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/GetBannedMembers200OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/communities/{id}/members/{memberAddress}/bans:
    post:
      summary: Ban a member from a community
      description: |
        Bans a member from a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: memberAddress
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member to ban.
      responses:
        '204':
          description: Member banned successfully
        '404':
          description: Community or member not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    delete:
      summary: Unban a member from a community
      description: |
        Unbans a member from a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: memberAddress
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member to unban.
      responses:
        '204':
          description: Member unbanned successfully
        '404':
          description: Community or member not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/places:
    get:
      summary: Get community places
      description: |
        Lists all places in a specific community.
        This endpoint has optional Signed Fetch authentication.
        When not signed, it only returns places of public communities.
        When signed, it returns all places if the user has access to the community or the community is public.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of places per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of places to skip.
      responses:
        '200':
          description: Places found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/GetCommunityPlaces200OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

    post:
      summary: Add places to community
      description: |
        Adds one or more places to a community.
        This endpoint requires Signed Fetch authentication.
        Duplicate places are ignored.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - placeIds
              properties:
                placeIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: Array of place IDs to add to the community
      responses:
        '204':
          description: Places added successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/places/{placeId}:
    delete:
      summary: Remove place from community
      description: |
        Removes a place from a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: placeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The unique identifier of the place to remove.
      responses:
        '204':
          description: Place removed successfully
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community or place not found
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './communities-schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
