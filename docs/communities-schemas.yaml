components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - message
        - error
      properties:
        message:
          type: string
          description: 'A message describing the error'
        error:
          type: string
          description: 'Error code (e.g. Not Found, Invalid Request, Unauthorized, etc.)'
    PaginationParams:
      type: object
      required:
        - limit
        - offset
      properties:
        limit:
          type: integer
          description: 'Number of items per page'
        offset:
          type: integer
          description: 'Number of items to skip'
    PaginatedResponse:
      type: object
      required:
        - results
        - total
        - limit
        - offset
      properties:
        results:
          type: array
          items:
            type: object
        total:
          type: integer
          description: 'Total number of items'
        limit:
          type: integer
          description: 'Number of items per page'
        offset:
          type: integer
          description: 'Number of items skipped'
    GetCommunities200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - name
                      - description
                      - ownerAddress
                      - privacy
                      - active
                      - membersCount
                      - thumbnails
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      ownerAddress:
                        type: string
                      privacy:
                        type: string
                        enum: [public, private]
                      active:
                        type: boolean
                      membersCount:
                        type: integer
                      thumbnails:
                        type: object
                        additionalProperties:
                          type: string
                        description: 'A map of thumbnail types to URLs. The key is the thumbnail type (e.g. "raw") and the value is the URL.'
                      friends:
                        type: array
                        items:
                          type: string
                          description: |
                            ETH Address of a friend of the community.
                            This is only present when the user is signed in.
                      role:
                        type: string
                        enum: [Owner, Moderator, Member, None]
                        description: |
                          The role of the user in the community.
                          This is only present when the user is signed in.
    CreateCommunity201OkResponse:
      type: object
      required:
        - message
        - data
      properties:
        message:
          type: string
          description: 'A message describing the result'
        data:
          type: object
          required:
            - id
            - name
            - description
            - ownerAddress
            - privacy
            - active
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            ownerAddress:
              type: string
            privacy:
              type: string
              enum: [public, private]
            active:
              type: boolean
            thumbnails:
              type: object
              additionalProperties:
                type: string
              description: 'A map of thumbnail types to URLs. The key is the thumbnail type (e.g. "raw") and the value is the URL.'
    GetCommunityById200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - name
            - description
            - ownerAddress
            - privacy
            - active
            - membersCount
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            ownerAddress:
              type: string
              description: 'ETH Address of the community owner'
            privacy:
              type: string
              enum: [public, private]
            active:
              type: boolean
              description: 'Whether the community is active or it was logically deleted'
            membersCount:
              type: integer
              description: 'Number of members in the community'
            thumbnails:
              type: object
              additionalProperties:
                type: string
              description: 'A map of thumbnail types to URLs. The key is the thumbnail type (e.g. "raw") and the value is the URL.'
    GetCommunityMembers200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - address
                      - role
                      - joinedAt
                    properties:
                      address:
                        type: string
                        description: 'ETH Address of the member'
                      role:
                        type: string
                        enum: [Owner, Moderator, Member]
                        description: 'Role of the member in the community'
                      joinedAt:
                        type: string
                        format: date-time
                        description: 'When the member joined the community'
    GetMemberCommunities200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - name
                      - description
                      - ownerAddress
                      - privacy
                      - active
                      - role
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      ownerAddress:
                        type: string
                      privacy:
                        type: string
                        enum: [public, private]
                      active:
                        type: boolean
                      role:
                        type: string
                        enum: [Owner, Moderator, Member]
    GetBannedMembers200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - address
                      - bannedAt
                    properties:
                      address:
                        type: string
                        description: 'ETH Address of the banned member'
                      bannedAt:
                        type: string
                        format: date-time
                        description: 'When the member was banned'
    CommunityPlace:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the place
    GetCommunityPlaces200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    $ref: '#/components/schemas/CommunityPlace'
