components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - message
        - error
      properties:
        message:
          type: string
          description: 'A message describing the error'
        error:
          type: string
          description: 'Error code (e.g. Not Found, Invalid Request, Unauthorized, etc.)'
    PaginationParams:
      type: object
      required:
        - limit
        - offset
      properties:
        limit:
          type: integer
          description: 'Number of items per page'
        offset:
          type: integer
          description: 'Number of items to skip'
    PaginatedResponse:
      type: object
      required:
        - results
        - total
        - limit
        - offset
      properties:
        results:
          type: array
          items:
            type: object
        total:
          type: integer
          description: 'Total number of items'
        limit:
          type: integer
          description: 'Number of items per page'
        offset:
          type: integer
          description: 'Number of items skipped'
    GetCommunities200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - name
                      - description
                      - ownerAddress
                      - privacy
                      - active
                      - membersCount
                      - thumbnails
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      ownerAddress:
                        type: string
                      privacy:
                        type: string
                        enum: [public, private]
                      active:
                        type: boolean
                      membersCount:
                        type: integer
                      thumbnails:
                        type: object
                        additionalProperties:
                          type: string
                        description: 'A map of thumbnail types to URLs. The key is the thumbnail type (e.g. "raw") and the value is the URL.'
                      friends:
                        type: array
                        items:
                          type: string
                          description: |
                            ETH Address of a friend of the community.
                            This is only present when the user is signed in.
                      role:
                        type: string
                        enum: [Owner, Moderator, Member, None]
                        description: |
                          The role of the user in the community.
                          This is only present when the user is signed in.
    CreateCommunity201OkResponse:
      type: object
      required:
        - message
        - data
      properties:
        message:
          type: string
          description: 'A message describing the result'
        data:
          type: object
          required:
            - id
            - name
            - description
            - ownerAddress
            - privacy
            - active
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            ownerAddress:
              type: string
            privacy:
              type: string
              enum: [public, private]
            active:
              type: boolean
            thumbnails:
              type: object
              additionalProperties:
                type: string
              description: 'A map of thumbnail types to URLs. The key is the thumbnail type (e.g. "raw") and the value is the URL.'
    UpdateCommunity200OkResponse:
      type: object
      required:
        - message
        - data
      properties:
        message:
          type: string
          description: 'A message describing the result'
        data:
          type: object
          required:
            - id
            - name
            - description
            - ownerAddress
            - privacy
            - active
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            ownerAddress:
              type: string
            privacy:
              type: string
              enum: [public, private]
            active:
              type: boolean
            thumbnails:
              type: object
              additionalProperties:
                type: string
              description: 'A map of thumbnail types to URLs. The key is the thumbnail type (e.g. "raw") and the value is the URL.'
    GetCommunityById200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - name
            - description
            - ownerAddress
            - privacy
            - active
            - membersCount
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            ownerAddress:
              type: string
              description: 'ETH Address of the community owner'
            privacy:
              type: string
              enum: [public, private]
            active:
              type: boolean
              description: 'Whether the community is active or it was logically deleted'
            membersCount:
              type: integer
              description: 'Number of members in the community'
            thumbnails:
              type: object
              additionalProperties:
                type: string
              description: 'A map of thumbnail types to URLs. The key is the thumbnail type (e.g. "raw") and the value is the URL.'
    GetCommunityMembers200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - address
                      - role
                      - joinedAt
                    properties:
                      address:
                        type: string
                        description: 'ETH Address of the member'
                      role:
                        type: string
                        enum: [Owner, Moderator, Member]
                        description: 'Role of the member in the community'
                      joinedAt:
                        type: string
                        format: date-time
                        description: 'When the member joined the community'
    GetMemberCommunities200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - name
                      - description
                      - ownerAddress
                      - privacy
                      - active
                      - role
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      ownerAddress:
                        type: string
                      privacy:
                        type: string
                        enum: [public, private]
                      active:
                        type: boolean
                      role:
                        type: string
                        enum: [Owner, Moderator, Member]
    GetBannedMembers200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - address
                      - bannedAt
                    properties:
                      address:
                        type: string
                        description: 'ETH Address of the banned member'
                      bannedAt:
                        type: string
                        format: date-time
                        description: 'When the member was banned'
    CommunityPlace:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the place
    GetCommunityPlaces200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    $ref: '#/components/schemas/CommunityPlace'

    GetManagedCommunities200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - name
                      - ownerAddress
                      - active
                      - role
                      - thumbnails
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      ownerAddress:
                        type: string
                      active:
                        type: boolean
                      role:
                        type: string
                        enum: [Owner, Moderator]
                      thumbnails:
                        type: object
                        additionalProperties:
                          type: string
                        description: 'A map of thumbnail types to URLs. The key is the thumbnail type (e.g. "raw") and the value is the URL.'

    GetReferralStats200OkResponse:
      type: object
      required:
        - invitedUsersAccepted
        - invitedUsersAcceptedViewed
        - rewardImages
      properties:
        invitedUsersAccepted:
          type: integer
          description: 'Current total number of users invited by the referral'
        invitedUsersAcceptedViewed:
          type: integer
          description: 'Total number of invited users recorded in the previous fetch'
        rewardImages:
          type: array
          description: 'Images url for each tier reached'
          items:
            type: object

    CreateCommunityRequest200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - communityId
            - memberAddress
            - type
            - status
          properties:
            id:
              type: string
              description: 'Unique identifier of the community request'
            communityId:
              type: string
              description: 'ID of the community'
            memberAddress:
              type: string
              description: 'ETH address of the member'
            type:
              type: string
              enum: [invite, request_to_join]
              description: 'Type of request'
            status:
              type: string
              enum: [pending, accepted, rejected, cancelled]
              description: 'Status of the request'

    GetActiveCommunityVoiceChats200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - activeChats
            - total
          properties:
            activeChats:
              type: array
              items:
                type: object
                required:
                  - communityId
                  - participantCount
                  - moderatorCount
                  - isMember
                  - communityName
                  - positions
                  - worlds
                properties:
                  communityId:
                    type: string
                    description: 'ID of the community'
                  participantCount:
                    type: integer
                    description: 'Number of participants in the voice chat'
                  moderatorCount:
                    type: integer
                    description: 'Number of moderators in the voice chat'
                  isMember:
                    type: boolean
                    description: 'Whether the user is a member of the community'
                  communityName:
                    type: string
                    description: 'Name of the community'
                  communityImage:
                    type: string
                    description: 'URL of the community image'
                  positions:
                    type: array
                    items:
                      type: string
                    description: 'Array of position coordinates'
                  worlds:
                    type: array
                    items:
                      type: string
                    description: 'Array of world identifiers'
            total:
              type: integer
              description: 'Total number of active voice chats'

    GetCommunityRequests200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - communityId
                      - memberAddress
                      - type
                      - status
                      - name
                      - hasClaimedName
                      - profilePictureUrl
                      - friendshipStatus
                    properties:
                      id:
                        type: string
                        description: 'Unique identifier of the community request'
                      communityId:
                        type: string
                        description: 'ID of the community'
                      memberAddress:
                        type: string
                        description: 'ETH address of the member who made/received the request'
                      type:
                        type: string
                        enum: [invite, request_to_join]
                        description: 'Type of request'
                      status:
                        type: string
                        enum: [pending, accepted, rejected, cancelled]
                        description: 'Status of the request'
                      name:
                        type: string
                        description: 'Display name of the member'
                      hasClaimedName:
                        type: boolean
                        description: 'Whether the member has claimed their name'
                      profilePictureUrl:
                        type: string
                        description: 'URL of the member profile picture'
                      friendshipStatus:
                        type: integer
                        description: 'Friendship status code between the authenticated user and the member'

    GetMemberRequests200OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/PaginatedResponse'
            - type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - communityId
                      - memberAddress
                      - type
                      - status
                      - name
                      - description
                      - ownerAddress
                      - ownerName
                      - privacy
                      - membersCount
                      - role
                      - active
                      - friends
                      - voiceChatStatus
                    properties:
                      id:
                        type: string
                        description: 'Unique identifier of the community request'
                      communityId:
                        type: string
                        description: 'ID of the community'
                      memberAddress:
                        type: string
                        description: 'ETH address of the member for whom the request was made'
                      type:
                        type: string
                        enum: [invite, request_to_join]
                        description: 'Type of request (invite received or join request sent)'
                      status:
                        type: string
                        enum: [pending, accepted, rejected, cancelled]
                        description: 'Status of the request'
                      name:
                        type: string
                        description: 'Name of the community'
                      description:
                        type: string
                        description: 'Description of the community'
                      ownerAddress:
                        type: string
                        description: 'ETH address of the community owner'
                      ownerName:
                        type: string
                        description: 'Display name of the community owner'
                      privacy:
                        type: string
                        enum: [public, private]
                        description: 'Privacy setting of the community'
                      membersCount:
                        type: integer
                        description: 'Total number of members in the community'
                      role:
                        type: string
                        enum: [none, Member, Moderator, Owner]
                        description: 'Current role of the user in this community'
                      active:
                        type: boolean
                        description: 'Whether the community is active'
                      friends:
                        type: array
                        items:
                          type: string
                        description: 'List of friends who are members of this community'
                      voiceChatStatus:
                        type: object
                        required:
                          - isActive
                          - participantCount
                          - moderatorCount
                        properties:
                          isActive:
                            type: boolean
                            description: 'Whether there is an active voice chat in the community'
                          participantCount:
                            type: integer
                            description: 'Number of participants in the voice chat'
                          moderatorCount:
                            type: integer
                            description: 'Number of moderators in the voice chat'
                        description: 'Voice chat status information for the community'
                      thumbnails:
                        type: object
                        additionalProperties:
                          type: string
                        description: 'A map of thumbnail types to URLs for the community'
