openapi: 3.0.0
info:
  title: Social Service API
  version: 1.0.0
  description: API documentation for the Social Service.

servers:
  - url: https://social-api.decentraland.org
    description: Production server
  - url: https://social-api.decentraland.zone
    description: Development server

components:
  securitySchemes:
    SignedFetch:
      type: apiKey
      in: header
      name: Authorization
      description: |
        Signed Fetch authentication.
        See ADR-44 for more details about the authentication mechanism.
    BearerAuth:
      type: http
      scheme: bearer
      description: |
        Bearer token authentication for admin endpoints.
        Requires API_ADMIN_TOKEN.

security:
  - SignedFetch: []

paths:
  /v1/communities:
    get:
      summary: List communities
      description: |
        Lists all communities.
        This endpoint has optional Signed Fetch authentication.
        When signed, it includes properties related to the authenticated user in its response.
        This endpoint excludes unlisted communities from results. Use direct community access (GET `/v1/communities/{id}`) to retrieve unlisted communities.
      security:
        - SignedFetch: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of communities per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of communities to skip.
        - name: search
          in: query
          required: false
          schema:
            type: string
          description: Search term to filter communities by name or description.
        - name: onlyMemberOf
          in: query
          required: false
          schema:
            type: boolean
          description: Filter communities where the authenticated user is a member.
      responses:
        '200':
          description: Communities found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetCommunities200OkResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    post:
      summary: Create a new community
      description: |
        Creates a new community with the provided details.
        This endpoint requires Signed Fetch authentication.
        The `unlisted` field controls whether the community appears in public listings.
        Unlisted communities remain accessible via direct links and appear in invitation lists.
      security:
        - SignedFetch: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: string
                description:
                  type: string
                placeIds:
                  type: string
                  description: 'JSON array of place IDs to add to the community'
                privacy:
                  type: string
                  enum: [public, private]
                  description: 'Community privacy setting'
                unlisted:
                  type: boolean
                  description: |
                    Whether the community should be hidden from public listings.
                    Unlisted communities can still be accessed via direct links or invitations.
                    Defaults to false.
                thumbnail:
                  type: string
                  format: binary
                  description: 'Community thumbnail image'
      responses:
        '201':
          description: Community created successfully
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/CreateCommunity201OkResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/communities/{id}:
    get:
      summary: Get a community by ID
      description: |
        Retrieves a specific community by its unique ID.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      responses:
        '200':
          description: Community found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetCommunityById200OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    put:
      summary: Update a community
      description: |
        Updates a community's details including name, description, privacy settings, unlisted status, and thumbnail.
        This endpoint requires Signed Fetch authentication and only community owners can update.
        Only community owners can change the `unlisted` status. Attempting to change it as a non-owner will result in a 401 Unauthorized error.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Community name'
                description:
                  type: string
                  description: 'Community description'
                placeIds:
                  type: string
                  description: 'JSON array of place IDs to replace all current community places'
                privacy:
                  type: string
                  enum: [public, private]
                  description: 'Community privacy setting'
                unlisted:
                  type: boolean
                  description: |
                    Whether the community should be hidden from public listings.
                    Only owners can change this setting.
                thumbnail:
                  type: string
                  format: binary
                  description: 'Community thumbnail image'
      responses:
        '200':
          description: Community updated successfully
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/UpdateCommunity200OkResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required or not owner
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    delete:
      summary: Delete a community
      description: |
        Deletes a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      responses:
        '204':
          description: Community deleted successfully
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/members:
    get:
      summary: List community members
      description: |
        Lists all members of a specific community.
        This endpoint has optional Signed Fetch authentication.
        When not signed, it only returns members of public communities.
        When signed, it returns all members if the user has access to the community.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of members per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of members to skip.
        - name: onlyOnline
          in: query
          required: false
          schema:
            type: boolean
          description: Filter to show only online members.
      responses:
        '200':
          description: Members found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetCommunityMembers200OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    post:
      summary: Add a member to a community
      description: |
        Adds a member to a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      responses:
        '204':
          description: Member added successfully
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/communities/{id}/members/{memberAddress}:
    delete:
      summary: Remove a member from a community
      description: |
        Removes a member from a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: memberAddress
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member to remove.
      responses:
        '204':
          description: Member removed successfully
        '404':
          description: Community or member not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    patch:
      summary: Update member role
      description: |
        Updates the role of a member in a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: memberAddress
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
              properties:
                role:
                  type: string
                  enum: [Owner, Moderator, Member]
                  description: 'New role for the member'
      responses:
        '204':
          description: Member role updated successfully
        '404':
          description: Community or member not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/members/{address}/communities:
    get:
      summary: List communities for a member
      description: |
        Lists all communities a member belongs to.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of communities per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of communities to skip.
      responses:
        '200':
          description: Communities found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetMemberCommunities200OkResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/bans:
    get:
      summary: List banned members of a community
      description: |
        Lists all banned members of a specific community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of banned members per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of banned members to skip.
      responses:
        '200':
          description: Banned members found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetBannedMembers200OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
  /v1/communities/{id}/members/{memberAddress}/bans:
    post:
      summary: Ban a member from a community
      description: |
        Bans a member from a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: memberAddress
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member to ban.
      responses:
        '204':
          description: Member banned successfully
        '404':
          description: Community or member not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    delete:
      summary: Unban a member from a community
      description: |
        Unbans a member from a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: memberAddress
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member to unban.
      responses:
        '204':
          description: Member unbanned successfully
        '404':
          description: Community or member not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/places:
    get:
      summary: Get community places
      description: |
        Lists all places in a specific community.
        This endpoint has optional Signed Fetch authentication.
        When not signed, it only returns places of public communities.
        When signed, it returns all places if the user has access to the community or the community is public.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of places per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of places to skip.
      responses:
        '200':
          description: Places found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetCommunityPlaces200OkResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

    post:
      summary: Add places to community
      description: |
        Adds one or more places to a community.
        This endpoint requires Signed Fetch authentication.
        Duplicate places are ignored.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - placeIds
              properties:
                placeIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: Array of place IDs to add to the community
      responses:
        '204':
          description: Places added successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/places/{placeId}:
    delete:
      summary: Remove place from community
      description: |
        Removes a place from a community.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: placeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The unique identifier of the place to remove.
      responses:
        '204':
          description: Place removed successfully
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community or place not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{address}/managed:
    get:
      summary: Get managed communities for an address
      description: |
        Lists all communities where the specified address is an owner or moderator.
        This endpoint requires admin authentication.
      security:
        - BearerAuth: []
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the user to get managed communities for.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of communities per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of communities to skip.
      responses:
        '200':
          description: Managed communities found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetManagedCommunities200OkResponse'
        '401':
          description: Unauthorized - Admin token required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/referral-progress:
    post:
      summary: Create referral progress
      description: |
        Creates a referral relationship between a referrer and an invited user.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - referrer
              properties:
                referrer:
                  type: string
                  description: 'ETH address of the referrer'
      responses:
        '204':
          description: Referral progress created successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Referrals
    patch:
      summary: Update referral signed up status
      description: |
        Updates the referral progress status to signed up for the authenticated user.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      responses:
        '204':
          description: Referral status updated successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Referral not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Referrals
    get:
      summary: Get invited users accepted stats
      description: |
        Retrieves the current users invited by a referral and the ones from the last time they were fetched, along with reward images containing the tier and URL information. This allows comparing the previously seen data with the current one.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      responses:
        '200':
          description: Referral statistics found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetReferralStats200OkResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Referrals

  /v1/referral-email:
    post:
      summary: Add referral email
      description: |
        Associates an email address with a referral for the authenticated user.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: 'Email address to associate with the referral'
      responses:
        '204':
          description: Referral email added successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Referrals

  /v1/communities/{id}/requests:
    get:
      summary: Get community requests
      description: |
        Lists all pending requests (invites and join requests) for a specific community.
        This endpoint requires Signed Fetch authentication and only community owners or moderators can access it.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of requests per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of requests to skip.
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [invite, request_to_join]
          description: Filter requests by type (invite or request_to_join).
      responses:
        '200':
          description: Community requests found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetCommunityRequests200OkResponse'
        '401':
          description: Unauthorized - Signed Fetch required or insufficient permissions
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    post:
      summary: Create community request
      description: |
        Creates a community request (invite or join request) for a specific member.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targetedAddress
                - type
              properties:
                targetedAddress:
                  type: string
                  description: 'ETH address of the member to create the request for'
                type:
                  type: string
                  enum: [invite, request_to_join]
                  description: 'Type of request to create'
      responses:
        '200':
          description: Community request created successfully
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/CreateCommunityRequest200OkResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/requests/{requestId}:
    patch:
      summary: Update community request status
      description: |
        Updates the status of a community request (accept, reject, or cancel).
        This endpoint requires Signed Fetch authentication with proper permissions:
        - For invites: Only the invited user can accept/reject, community owners/moderators can cancel
        - For join requests: Only community owners/moderators can accept/reject, the requesting user can cancel
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: requestId
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/components/schemas/UpdateCommunityRequestStatusRequest'
      responses:
        '204':
          description: Community request status updated successfully
        '400':
          description: Invalid request or intention
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required or insufficient permissions
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community or request not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/members/{address}/requests:
    get:
      summary: Get member requests
      description: |
        Lists all pending requests (invites received and join requests sent) for a specific member.
        This endpoint requires Signed Fetch authentication and users can only access their own requests.
      security:
        - SignedFetch: []
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the member.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of requests per page.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of requests to skip.
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [invite, request_to_join]
          description: Filter requests by type (invite or request_to_join).
      responses:
        '200':
          description: Member requests found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetMemberRequests200OkResponse'
        '401':
          description: Unauthorized - Signed Fetch required or accessing another user's requests
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/members/{address}/invites:
    get:
      summary: Get community invites for a user
      description: |
        Lists all communities where the authenticated user (inviter) is a member but the specified address (invitee) is not a member.
        This is used to render a list of potential communities to invite the user to.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
          description: ETH address of the user to check invite possibilities for (invitee).
      responses:
        '200':
          description: Community invites found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetCommunityInvites200OkResponse'
        '400':
          description: Invalid request - Users cannot invite themselves
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/posts/{postId}/like:
    post:
      summary: Like a community post
      description: |
        Likes a post in a community.
        This endpoint requires Signed Fetch authentication.
        Users can only like posts from communities they are members of.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: postId
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the post.
      responses:
        '201':
          description: Post liked successfully
        '401':
          description: Unauthorized - Signed Fetch required or not a member of the community
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community or post not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    delete:
      summary: Unlike a community post
      description: |
        Unlikes a post in a community.
        This endpoint requires Signed Fetch authentication.
        Users can only unlike posts they have previously liked.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: postId
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the post.
      responses:
        '204':
          description: Post unliked successfully
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community or post not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/community-voice-chats/active:
    get:
      summary: Get active community voice chats
      description: |
        Lists all active community voice chats for the authenticated user.
        This endpoint requires Signed Fetch authentication.
      security:
        - SignedFetch: []
      responses:
        '200':
          description: Active community voice chats found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetActiveCommunityVoiceChats200OkResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Community Voice Chats

  /v1/communities/{id}/posts:
    get:
      summary: List community posts
      description: |
        Lists all posts from a specific community with pagination support.
        This endpoint has optional Signed Fetch authentication.
        When not signed, it only returns posts from public communities.
        When signed, it returns all posts if the user has access to the community.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of posts per page (max 100).
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of posts to skip.
      responses:
        '200':
          description: Posts found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/GetCommunityPosts200OkResponse'
        '401':
          description: Unauthorized - Signed Fetch required
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
    post:
      summary: Create a community post
      description: |
        Creates a new post in a community.
        This endpoint requires Signed Fetch authentication and only community owners or moderators can create posts.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/components/schemas/CreatePostRequest'
      responses:
        '201':
          description: Post created successfully
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/CreatePost201OkResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Signed Fetch required or insufficient permissions
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities

  /v1/communities/{id}/posts/{postId}:
    delete:
      summary: Delete a community post
      description: |
        Deletes a post from a community.
        This endpoint requires Signed Fetch authentication and only community owners or moderators can delete posts.
      security:
        - SignedFetch: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the community.
        - name: postId
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the post.
      responses:
        '204':
          description: Post deleted successfully
        '401':
          description: Unauthorized - Signed Fetch required or insufficient permissions
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Community or post not found
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Communities
